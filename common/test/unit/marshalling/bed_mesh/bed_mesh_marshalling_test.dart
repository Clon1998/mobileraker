/*
 * Copyright (c) 2023-2025. Patrick Schmidt.
 * All rights reserved.
 */

import 'dart:convert';

import 'package:common/data/dto/machine/bed_mesh/bed_mesh.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  const originalStr = '''
 {
  "profile_name": "BQ-Plate",
  "mesh_min": [
    40,
    40
  ],
  "mesh_max": [
    260,
    260
  ],
  "probed_matrix": [
    [
      -0.035,
      -0.05,
      -0.0375,
      -0.03,
      -0.0075
    ],
    [
      0.0025,
      -0.02,
      -0.0075,
      -0.005,
      -0.005
    ],
    [
      -0.005,
      -0.0325,
      0,
      -0.0075,
      0.015
    ],
    [
      -0.0025,
      -0.01,
      -0.0075,
      -0.015,
      0.02
    ],
    [
      -0.0175,
      -0.0425,
      -0.0275,
      -0.025,
      -0.0025
    ]
  ],
  "mesh_matrix": [
    [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ],
    [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ],
    [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ],
    [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ],
    [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ],
    [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ],
    [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ],
    [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ],
    [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ],
    [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ],
    [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ],
    [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ],
    [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]
  ],
  "profiles": {
    "BQ-Plate": {
      "points": [
        [
          -0.035,
          -0.05,
          -0.0375,
          -0.03,
          -0.0075
        ],
        [
          0.0025,
          -0.02,
          -0.0075,
          -0.005,
          -0.005
        ],
        [
          -0.005,
          -0.0325,
          0,
          -0.0075,
          0.015
        ],
        [
          -0.0025,
          -0.01,
          -0.0075,
          -0.015,
          0.02
        ],
        [
          -0.0175,
          -0.0425,
          -0.0275,
          -0.025,
          -0.0025
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate": {
      "points": [
        [
          -0.025,
          -0.0325,
          -0.025,
          -0.02375,
          -0.00875
        ],
        [
          0.00875,
          -0.015,
          0.0025,
          0.0025,
          0.01875
        ],
        [
          0,
          -0.0125,
          0,
          0.00375,
          0.02625
        ],
        [
          -0.005,
          -0.005,
          0.0025,
          -0.00125,
          0.01375
        ],
        [
          -0.0125,
          -0.02625,
          -0.0125,
          -0.005,
          0
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate": {
      "points": [
        [
          -0.06,
          -0.075,
          -0.0675,
          -0.0625,
          -0.0475
        ],
        [
          -0.025,
          -0.0375,
          -0.0175,
          -0.0275,
          -0.015
        ],
        [
          -0.0175,
          -0.015,
          0,
          -0.0125,
          0.0075
        ],
        [
          -0.0125,
          -0.03,
          -0.0225,
          -0.0175,
          -0.0075
        ],
        [
          -0.04,
          -0.0325,
          -0.03,
          -0.0225,
          -0.0325
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate(Probe)": {
      "points": [
        [
          -0.07125,
          -0.045,
          -0.0275,
          -0.03,
          -0.0525
        ],
        [
          -0.0225,
          -0.0075,
          0.0125,
          0,
          -0.03375
        ],
        [
          -0.0525,
          -0.02625,
          0,
          -0.015,
          -0.03875
        ],
        [
          -0.05125,
          -0.01625,
          0,
          -0.00875,
          -0.03375
        ],
        [
          -0.06625,
          -0.0375,
          -0.0125,
          -0.0225,
          -0.06
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate(Probe)": {
      "points": [
        [
          -0.07,
          -0.0525,
          -0.0225,
          -0.03375,
          -0.0625
        ],
        [
          -0.03875,
          -0.03625,
          -0.0025,
          -0.0075,
          -0.04625
        ],
        [
          -0.055,
          -0.04125,
          0,
          -0.01375,
          -0.0375
        ],
        [
          -0.06625,
          -0.0225,
          -0.005,
          -0.015,
          -0.025
        ],
        [
          -0.085,
          -0.05375,
          -0.02125,
          -0.03125,
          -0.06375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (Clicky)": {
      "points": [
        [
          -0.0475,
          -0.03625,
          -0.02625,
          -0.01625,
          -0.02375,
          -0.02125,
          -0.0325,
          -0.03875
        ],
        [
          -0.0175,
          -0.01,
          -0.0075,
          0,
          -0.00375,
          0,
          -0.00875,
          -0.02625
        ],
        [
          -0.005,
          0.00625,
          0.00875,
          0.01875,
          0.015,
          0.0125,
          0,
          -0.0075
        ],
        [
          -0.01125,
          -0.01,
          -0.00125,
          0.01875,
          0.00875,
          0.00875,
          -0.00125,
          -0.005
        ],
        [
          -0.01875,
          0,
          0.015,
          0.02875,
          0.01625,
          0.0175,
          0.00125,
          0.02875
        ],
        [
          -0.01875,
          -0.00125,
          0.01375,
          0.0275,
          0.01625,
          0.01375,
          -0.00125,
          -0.00375
        ],
        [
          -0.02125,
          -0.00875,
          0.00625,
          0.02125,
          0.015,
          0.0075,
          -0.01125,
          -0.01875
        ],
        [
          -0.02375,
          -0.01375,
          0,
          0.01,
          0.0125,
          0.01125,
          -0.01125,
          -0.02625
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (Clicky)": {
      "points": [
        [
          -0.065,
          -0.055,
          -0.035,
          -0.03,
          -0.04,
          -0.035,
          -0.03875,
          -0.0575
        ],
        [
          -0.025,
          -0.015,
          -0.00625,
          0,
          0.0025,
          -0.00125,
          -0.00625,
          -0.02875
        ],
        [
          -0.01625,
          0.00625,
          0.01125,
          0.02,
          0.02125,
          0.0025,
          -0.00625,
          -0.01625
        ],
        [
          -0.02,
          -0.02125,
          0.005,
          0.02625,
          0.0175,
          0.01375,
          -0.01,
          -0.0175
        ],
        [
          -0.02125,
          0.00625,
          0.02,
          0.0275,
          0.00125,
          0.01375,
          -0.00625,
          -0.01
        ],
        [
          -0.02375,
          -0.01,
          0.01375,
          0.025,
          0.03,
          0.015,
          -0.00125,
          -0.01125
        ],
        [
          -0.02625,
          -0.01125,
          -0.00125,
          0.0175,
          0.0175,
          0.00125,
          -0.0175,
          -0.04
        ],
        [
          -0.03875,
          -0.02,
          -0.005,
          0.00625,
          0.005,
          0.00625,
          -0.02,
          -0.0425
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (Clicky)": {
      "points": [
        [
          -0.0525,
          -0.0225,
          -0.00875,
          -0.00125,
          -0.01125,
          -0.00625,
          -0.0125,
          -0.0375
        ],
        [
          -0.03875,
          -0.01,
          -0.00125,
          0,
          0.005,
          0.01,
          -0.005,
          -0.04375
        ],
        [
          -0.0175,
          0.00125,
          0.0075,
          0.0225,
          0.0075,
          0.01375,
          -0.00125,
          -0.04125
        ],
        [
          -0.02625,
          -0.01125,
          0,
          0.02625,
          0.02625,
          0.005,
          0.0025,
          -0.0225
        ],
        [
          -0.04,
          -0.00625,
          0.02375,
          0.02125,
          0.0275,
          0.02375,
          0.0075,
          -0.0125
        ],
        [
          -0.03125,
          -0.00875,
          -0.005,
          0.0275,
          0.0225,
          0.0325,
          0.01625,
          -0.01375
        ],
        [
          -0.01625,
          -0.01875,
          -0.0025,
          0.02,
          0.0225,
          0.0175,
          0.005,
          -0.01875
        ],
        [
          -0.035,
          -0.03875,
          -0.00875,
          -0.00375,
          0.02,
          0.02125,
          -0.02625,
          -0.02625
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG)": {
      "points": [
        [
          -0.0525,
          -0.04125,
          -0.0275,
          -0.0175,
          -0.02375,
          -0.02,
          -0.0375,
          -0.0525
        ],
        [
          -0.03875,
          -0.01875,
          -0.01125,
          0,
          0.00125,
          0,
          -0.0075,
          -0.03375
        ],
        [
          -0.03625,
          -0.01625,
          -0.01,
          0.0075,
          0.00875,
          0.00625,
          -0.0025,
          -0.02
        ],
        [
          -0.0625,
          -0.04625,
          -0.0225,
          0,
          0.00125,
          0.0025,
          -0.00875,
          -0.01125
        ],
        [
          -0.06375,
          -0.03125,
          -0.00625,
          0.00875,
          0.01,
          0.00875,
          0.00125,
          0.00125
        ],
        [
          -0.06875,
          -0.0325,
          -0.00625,
          0.00625,
          0.00375,
          0.00375,
          -0.00875,
          -0.01
        ],
        [
          -0.05875,
          -0.0325,
          -0.005,
          0.0075,
          0.00625,
          0.00125,
          -0.015,
          -0.02375
        ],
        [
          -0.04375,
          -0.02875,
          -0.00875,
          -0.00125,
          0.00375,
          0.00375,
          -0.02125,
          -0.03375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (C+NG)": {
      "points": [
        [
          -0.04625,
          -0.02875,
          -0.00875,
          -0.0075,
          -0.02,
          -0.01625,
          -0.02375,
          -0.05875
        ],
        [
          -0.0525,
          -0.0225,
          -0.00875,
          0,
          -0.0075,
          -0.0025,
          -0.005,
          -0.05125
        ],
        [
          -0.06625,
          -0.02125,
          -0.02,
          -0.00125,
          0.00625,
          -0.005,
          -0.00625,
          -0.04
        ],
        [
          -0.08875,
          -0.06,
          -0.035,
          -0.0125,
          -0.00875,
          -0.00375,
          -0.00875,
          -0.03125
        ],
        [
          -0.0775,
          -0.03375,
          -0.0025,
          0.00375,
          -0.00875,
          0.01625,
          -0.005,
          0.0375
        ],
        [
          -0.07625,
          -0.02375,
          0,
          0.01125,
          -0.00875,
          0,
          -0.01,
          -0.00375
        ],
        [
          -0.06,
          -0.02375,
          -0.005,
          0.005,
          -0.00625,
          -0.01375,
          -0.0225,
          -0.02
        ],
        [
          -0.06125,
          -0.0525,
          -0.00875,
          -0.01125,
          -0.02125,
          -0.02375,
          -0.04375,
          -0.04375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (C+NG)": {
      "points": [
        [
          -0.04875,
          -0.0325,
          -0.01875,
          -0.0175,
          -0.0275,
          -0.02375,
          -0.03125,
          -0.0575
        ],
        [
          -0.0325,
          -0.01875,
          -0.00875,
          0,
          0.00625,
          0.00375,
          -0.00625,
          -0.025
        ],
        [
          -0.0325,
          -0.01,
          -0.00125,
          0.01375,
          0.02125,
          0.0075,
          -0.0025,
          -0.01625
        ],
        [
          -0.05,
          -0.045,
          -0.015,
          0.01375,
          0.01125,
          0.015,
          -0.00875,
          -0.01875
        ],
        [
          -0.05125,
          -0.01375,
          0.00875,
          0.0175,
          0.00875,
          0.015,
          0.0075,
          0.00625
        ],
        [
          -0.05625,
          -0.02125,
          -0.005,
          0.015,
          0.025,
          0.01875,
          0.0075,
          -0.0025
        ],
        [
          -0.05,
          -0.02125,
          -0.01125,
          0.01125,
          0.015,
          0.00625,
          -0.015,
          -0.02875
        ],
        [
          -0.045,
          -0.02125,
          -0.00875,
          0.0025,
          0.0025,
          0.01,
          -0.0175,
          -0.035
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG+B)": {
      "points": [
        [
          -0.07875,
          -0.05875,
          -0.0475,
          -0.02375,
          -0.03,
          -0.03,
          -0.04375,
          -0.0575
        ],
        [
          -0.035,
          -0.02875,
          -0.01875,
          0,
          0.005,
          0.0025,
          -0.00875,
          -0.03625
        ],
        [
          -0.04125,
          -0.02875,
          -0.02125,
          -0.00125,
          0.00375,
          0.00875,
          -0.01625,
          -0.0325
        ],
        [
          -0.06,
          -0.05375,
          -0.03125,
          -0.005,
          -0.00625,
          0,
          -0.00875,
          -0.0175
        ],
        [
          -0.05625,
          -0.03875,
          -0.02,
          0.01125,
          0.00125,
          0.005,
          0,
          -0.00875
        ],
        [
          -0.065,
          -0.04,
          -0.01375,
          0.0025,
          0.00125,
          0.005,
          -0.01,
          -0.01375
        ],
        [
          -0.06375,
          -0.03625,
          -0.0225,
          -0.00125,
          0,
          -0.0075,
          -0.02125,
          -0.0325
        ],
        [
          -0.05875,
          -0.045,
          -0.03,
          -0.00875,
          -0.005,
          -0.00875,
          -0.03375,
          -0.0425
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (C+NG+B)": {
      "points": [
        [
          -0.1125,
          -0.075,
          -0.0475,
          -0.0375,
          -0.06125,
          -0.055,
          -0.0475,
          -0.09375
        ],
        [
          -0.07125,
          -0.03625,
          -0.0125,
          0,
          -0.01625,
          -0.01875,
          -0.01125,
          -0.04875
        ],
        [
          -0.06625,
          -0.01875,
          -0.00375,
          0.0075,
          0.005,
          -0.005,
          0.0025,
          -0.04
        ],
        [
          -0.08125,
          -0.055,
          -0.01375,
          0.01375,
          0,
          -0.00375,
          0,
          -0.03125
        ],
        [
          -0.0875,
          -0.04,
          -0.00125,
          0.00875,
          0.005,
          0.00375,
          0.01125,
          -0.01
        ],
        [
          -0.09,
          -0.04875,
          -0.01125,
          0.0075,
          0.005,
          -0.00625,
          0,
          -0.0275
        ],
        [
          -0.0875,
          -0.04625,
          -0.0275,
          -0.01,
          -0.01625,
          -0.02375,
          -0.0225,
          -0.0575
        ],
        [
          -0.105,
          -0.0675,
          -0.04625,
          -0.03,
          -0.04375,
          -0.045,
          -0.0475,
          -0.08875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (C+NG+B)": {
      "points": [
        [
          -0.09625,
          -0.055,
          -0.035,
          -0.02625,
          -0.03625,
          -0.0375,
          -0.04875,
          -0.06625
        ],
        [
          -0.055,
          -0.015,
          -0.01125,
          0,
          -0.00125,
          -0.00625,
          -0.00875,
          -0.04125
        ],
        [
          -0.04625,
          -0.01125,
          -0.00625,
          0.01,
          0.0075,
          0.00375,
          -0.00375,
          -0.03
        ],
        [
          -0.075,
          -0.03375,
          -0.0125,
          0.00875,
          0.0125,
          -0.0025,
          0.00125,
          -0.02
        ],
        [
          -0.08,
          -0.0375,
          -0.00625,
          0.01125,
          0.01625,
          0.01125,
          0.0075,
          -0.00375
        ],
        [
          -0.085,
          -0.03625,
          -0.0175,
          -0.00125,
          -0.0025,
          -0.00125,
          -0.00375,
          -0.01625
        ],
        [
          -0.08125,
          -0.04125,
          -0.03,
          -0.00375,
          -0.00625,
          -0.02,
          -0.015,
          -0.035
        ],
        [
          -0.07875,
          -0.06375,
          -0.05,
          -0.02625,
          -0.02125,
          -0.02375,
          -0.0475,
          -0.05875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ_V2": {
      "points": [
        [
          -0.04,
          -0.03375,
          -0.03125,
          -0.015,
          -0.025,
          -0.02375,
          -0.02875,
          -0.04375
        ],
        [
          -0.02375,
          -0.01875,
          -0.01625,
          0,
          0.005,
          0.00875,
          0.005,
          -0.035
        ],
        [
          -0.0375,
          -0.015,
          -0.01,
          0.0125,
          0.02,
          0.015,
          0.01125,
          -0.01625
        ],
        [
          -0.04375,
          -0.02875,
          -0.0175,
          0.0175,
          0.035,
          0.02125,
          0.03125,
          0.005
        ],
        [
          -0.04125,
          -0.00125,
          0.005,
          0.0375,
          0.035,
          0.0425,
          0.04625,
          0.0425
        ],
        [
          -0.03375,
          0.00375,
          0.00875,
          0.035,
          0.0375,
          0.035,
          0.035,
          0.02375
        ],
        [
          -0.015,
          0.005,
          0.01625,
          0.03375,
          0.035,
          0.025,
          0.02875,
          0.01125
        ],
        [
          -0.015,
          -0.0025,
          0.01625,
          0.035,
          0.03875,
          0.03875,
          0.0225,
          0.00875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG+B++)": {
      "points": [
        [
          -0.0725,
          -0.06375,
          -0.0525,
          -0.03625,
          -0.04125,
          -0.04125,
          -0.05625,
          -0.06375
        ],
        [
          -0.0325,
          -0.02125,
          -0.0225,
          0,
          0,
          0.00125,
          -0.01625,
          -0.04
        ],
        [
          -0.04,
          -0.025,
          -0.01875,
          0.00375,
          0.00375,
          0.015,
          -0.005,
          -0.02125
        ],
        [
          -0.05875,
          -0.045,
          -0.0225,
          0.00375,
          0.0075,
          0.0075,
          0.00375,
          -0.0075
        ],
        [
          -0.0575,
          -0.03875,
          -0.015,
          0.01125,
          0.0075,
          0.0125,
          0.005,
          -0.00375
        ],
        [
          -0.06375,
          -0.03625,
          -0.01375,
          0.005,
          0.0025,
          0.0075,
          -0.0075,
          -0.01125
        ],
        [
          -0.06875,
          -0.0425,
          -0.03125,
          -0.01125,
          -0.0075,
          -0.02125,
          -0.0325,
          -0.045
        ],
        [
          -0.075,
          -0.0575,
          -0.04875,
          -0.03,
          -0.03125,
          -0.03625,
          -0.05625,
          -0.06875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "Bed_45_left_rotated_try2_10min_heat": {
      "points": [
        [
          0.04125,
          0.08875,
          0.1175,
          0.1125,
          0.0825,
          -0.02625
        ],
        [
          0.01375,
          0.06625,
          0.0975,
          0.0925,
          0.0675,
          -0.0225
        ],
        [
          -0.0325,
          0.0275,
          0.065,
          0.0625,
          0.02875,
          -0.0425
        ],
        [
          -0.04,
          0.0175,
          0.0525,
          0.07125,
          0.05125,
          -0.01375
        ],
        [
          0.0025,
          0.055,
          0.095,
          0.1,
          0.0725,
          0.01
        ],
        [
          0.055,
          0.1025,
          0.13125,
          0.12125,
          0.085,
          0.02875
        ]
      ],
      "mesh_params": {
        "min_x": 25,
        "max_x": 275,
        "min_y": 25,
        "max_y": 275,
        "x_count": 6,
        "y_count": 6,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "Bed_45_left_rotated_try1_5min_heated": {
      "points": [
        [
          0.05375,
          0.09875,
          0.12625,
          0.12,
          0.0925,
          -0.01875
        ],
        [
          0.025,
          0.07875,
          0.10375,
          0.0975,
          0.075,
          -0.01875
        ],
        [
          -0.02375,
          0.035,
          0.075,
          0.0725,
          0.045,
          -0.02875
        ],
        [
          -0.02875,
          0.02625,
          0.06375,
          0.08375,
          0.0625,
          0.005
        ],
        [
          0.0125,
          0.0625,
          0.10625,
          0.115,
          0.09,
          0.0275
        ],
        [
          0.065,
          0.115,
          0.14125,
          0.13125,
          0.0975,
          0.0475
        ]
      ],
      "mesh_params": {
        "min_x": 25,
        "max_x": 275,
        "min_y": 25,
        "max_y": 275,
        "x_count": 6,
        "y_count": 6,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "Bed_45_left_rotated_try3_roomtemp": {
      "points": [
        [
          0.0325,
          0.08375,
          0.1125,
          0.105,
          0.075,
          -0.04
        ],
        [
          0.00625,
          0.06125,
          0.0875,
          0.07625,
          0.06,
          -0.035
        ],
        [
          -0.0425,
          0.01625,
          0.05,
          0.0475,
          0.02,
          -0.0475
        ],
        [
          -0.04875,
          0.0075,
          0.04375,
          0.0625,
          0.04,
          -0.02
        ],
        [
          -0.005,
          0.0425,
          0.0825,
          0.09,
          0.0675,
          0.0025
        ],
        [
          0.0525,
          0.1,
          0.1275,
          0.115,
          0.07625,
          0.0275
        ]
      ],
      "mesh_params": {
        "min_x": 25,
        "max_x": 275,
        "min_y": 25,
        "max_y": 275,
        "x_count": 6,
        "y_count": 6,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    }
  }
}
    ''';

  test('BedMesh.fromJson()', () {
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);

    expect(mesh.profileName, 'BQ-Plate');
    expect(mesh.probedMatrix.length, 5);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    expect(mesh.profiles.length, 19);
    expect(mesh.zValueRangeProbed, (-0.05, 0.02));
    expect(mesh.meshMin, (40, 40));
    expect(mesh.meshMax, (260, 260));

    // Verify probedMatrix
    expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify meshMatrix
    expect(mesh.meshMatrix[0], [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ]);
    expect(mesh.meshMatrix[1], [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ]);
    expect(mesh.meshMatrix[2], [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ]);
    expect(mesh.meshMatrix[3], [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ]);
    expect(mesh.meshMatrix[4], [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ]);
    expect(mesh.meshMatrix[5], [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ]);
    expect(mesh.meshMatrix[6], [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ]);
    expect(mesh.meshMatrix[7], [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ]);
    expect(mesh.meshMatrix[8], [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ]);
    expect(mesh.meshMatrix[9], [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ]);
    expect(mesh.meshMatrix[10], [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ]);
    expect(mesh.meshMatrix[11], [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ]);
    expect(mesh.meshMatrix[12], [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]);
  });

  test('BedMesh.partialUpdate() full', () {
    const updateStr = '''
 {
  "profile_name": "Not A Plate",
  "mesh_min": [
    20,
    20
  ],
  "mesh_max": [
    280,
    280
  ],
  "probed_matrix": [
    [
      -0.3,
      -0.2,
      -0.1
    ],
    [
      0.44,
      -0.33,
      -0.22
    ],
    [
      -0.1,
      -0.2,
      0
    ]
  ],
  "mesh_matrix": [
    [
      -0.035,
      -0.039296,
      -0.046259,
      -0.05,
      -0.04713,
      -0.04137,
      -0.0375,
      -0.035407,
      -0.032537,
      -0.03,
      -0.023611,
      -0.013556
    ],
    [
      -0.024611,
      -0.029446,
      -0.0373,
      -0.041593,
      -0.038844,
      -0.033171,
      -0.029389,
      -0.027544,
      -0.025125,
      -0.023111,
      -0.01854,
      -0.011403
    ],
    [
      -0.007556,
      -0.013295,
      -0.022642,
      -0.027852,
      -0.025251,
      -0.019632,
      -0.015944,
      -0.014531,
      -0.012906,
      -0.011778,
      -0.010147,
      -0.007723
    ],
    [
      0.0025,
      -0.003852,
      -0.014204,
      -0.02,
      -0.017278,
      -0.011333,
      -0.0075,
      -0.006444,
      -0.0055,
      -0.005,
      -0.004926,
      -0.004963
    ],
    [
      0.001519,
      -0.005439,
      -0.016732,
      -0.02287,
      -0.018537,
      -0.009844,
      -0.004444,
      -0.004084,
      -0.004611,
      -0.004833,
      -0.003388,
      -0.000981
    ],
    [
      -0.002463,
      -0.010231,
      -0.022769,
      -0.029296,
      -0.022371,
      -0.009292,
      -0.001389,
      -0.002118,
      -0.004947,
      -0.006222,
      -0.002082,
      0.005052
    ],
    [
      -0.005,
      -0.013019,
      -0.025926,
      -0.0325,
      -0.024296,
      -0.009093,
      0,
      -0.001426,
      -0.00563,
      -0.0075,
      -0.001556,
      0.008722
    ],
    [
      -0.004315,
      -0.010685,
      -0.020949,
      -0.026222,
      -0.019988,
      -0.008392,
      -0.001537,
      -0.00338,
      -0.007732,
      -0.009481,
      -0.002378,
      0.017296
    ],
    [
      -0.002852,
      -0.006446,
      -0.012268,
      -0.015389,
      -0.012724,
      -0.007609,
      -0.004741,
      -0.007081,
      -0.011306,
      -0.012685,
      -0.004074,
      0.019593
    ],
    [
      -0.0025,
      -0.004593,
      -0.008019,
      -0.01,
      -0.009426,
      -0.008074,
      -0.0075,
      -0.01,
      -0.013944,
      -0.015,
      -0.00563,
      0.02
    ],
    [
      -0.006537,
      -0.009819,
      -0.015182,
      -0.018241,
      -0.017136,
      -0.014617,
      -0.013204,
      -0.014832,
      -0.01753,
      -0.017963,
      -0.009349,
      0.013981
    ],
    [
      -0.013352,
      -0.018973,
      -0.028133,
      -0.033259,
      -0.030795,
      -0.025468,
      -0.02213,
      -0.022253,
      -0.022913,
      -0.02237,
      -0.015221,
      0.003741
    ]
  ],
  "profiles": {
    "BQ-Plate": {
      "points": [
        [
          -0.035,
          -0.05,
          -0.0375,
          -0.03,
          -0.0075
        ],
        [
          0.0025,
          -0.02,
          -0.0075,
          -0.005,
          -0.005
        ],
        [
          -0.005,
          -0.0325,
          0,
          -0.0075,
          0.015
        ],
        [
          -0.0025,
          -0.01,
          -0.0075,
          -0.015,
          0.02
        ],
        [
          -0.0175,
          -0.0425,
          -0.0275,
          -0.025,
          -0.0025
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate": {
      "points": [
        [
          -0.025,
          -0.0325,
          -0.025,
          -0.02375,
          -0.00875
        ],
        [
          0.00875,
          -0.015,
          0.0025,
          0.0025,
          0.01875
        ],
        [
          0,
          -0.0125,
          0,
          0.00375,
          0.02625
        ],
        [
          -0.005,
          -0.005,
          0.0025,
          -0.00125,
          0.01375
        ],
        [
          -0.0125,
          -0.02625,
          -0.0125,
          -0.005,
          0
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate": {
      "points": [
        [
          -0.06,
          -0.075,
          -0.0675,
          -0.0625,
          -0.0475
        ],
        [
          -0.025,
          -0.0375,
          -0.0175,
          -0.0275,
          -0.015
        ],
        [
          -0.0175,
          -0.015,
          0,
          -0.0125,
          0.0075
        ],
        [
          -0.0125,
          -0.03,
          -0.0225,
          -0.0175,
          -0.0075
        ],
        [
          -0.04,
          -0.0325,
          -0.03,
          -0.0225,
          -0.0325
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate(Probe)": {
      "points": [
        [
          -0.07125,
          -0.045,
          -0.0275,
          -0.03,
          -0.0525
        ],
        [
          -0.0225,
          -0.0075,
          0.0125,
          0,
          -0.03375
        ],
        [
          -0.0525,
          -0.02625,
          0,
          -0.015,
          -0.03875
        ],
        [
          -0.05125,
          -0.01625,
          0,
          -0.00875,
          -0.03375
        ],
        [
          -0.06625,
          -0.0375,
          -0.0125,
          -0.0225,
          -0.06
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate(Probe)": {
      "points": [
        [
          -0.07,
          -0.0525,
          -0.0225,
          -0.03375,
          -0.0625
        ],
        [
          -0.03875,
          -0.03625,
          -0.0025,
          -0.0075,
          -0.04625
        ],
        [
          -0.055,
          -0.04125,
          0,
          -0.01375,
          -0.0375
        ],
        [
          -0.06625,
          -0.0225,
          -0.005,
          -0.015,
          -0.025
        ],
        [
          -0.085,
          -0.05375,
          -0.02125,
          -0.03125,
          -0.06375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 260,
        "min_y": 40,
        "max_y": 260,
        "x_count": 5,
        "y_count": 5,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (Clicky)": {
      "points": [
        [
          -0.0475,
          -0.03625,
          -0.02625,
          -0.01625,
          -0.02375,
          -0.02125,
          -0.0325,
          -0.03875
        ],
        [
          -0.0175,
          -0.01,
          -0.0075,
          0,
          -0.00375,
          0,
          -0.00875,
          -0.02625
        ],
        [
          -0.005,
          0.00625,
          0.00875,
          0.01875,
          0.015,
          0.0125,
          0,
          -0.0075
        ],
        [
          -0.01125,
          -0.01,
          -0.00125,
          0.01875,
          0.00875,
          0.00875,
          -0.00125,
          -0.005
        ],
        [
          -0.01875,
          0,
          0.015,
          0.02875,
          0.01625,
          0.0175,
          0.00125,
          0.02875
        ],
        [
          -0.01875,
          -0.00125,
          0.01375,
          0.0275,
          0.01625,
          0.01375,
          -0.00125,
          -0.00375
        ],
        [
          -0.02125,
          -0.00875,
          0.00625,
          0.02125,
          0.015,
          0.0075,
          -0.01125,
          -0.01875
        ],
        [
          -0.02375,
          -0.01375,
          0,
          0.01,
          0.0125,
          0.01125,
          -0.01125,
          -0.02625
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (Clicky)": {
      "points": [
        [
          -0.065,
          -0.055,
          -0.035,
          -0.03,
          -0.04,
          -0.035,
          -0.03875,
          -0.0575
        ],
        [
          -0.025,
          -0.015,
          -0.00625,
          0,
          0.0025,
          -0.00125,
          -0.00625,
          -0.02875
        ],
        [
          -0.01625,
          0.00625,
          0.01125,
          0.02,
          0.02125,
          0.0025,
          -0.00625,
          -0.01625
        ],
        [
          -0.02,
          -0.02125,
          0.005,
          0.02625,
          0.0175,
          0.01375,
          -0.01,
          -0.0175
        ],
        [
          -0.02125,
          0.00625,
          0.02,
          0.0275,
          0.00125,
          0.01375,
          -0.00625,
          -0.01
        ],
        [
          -0.02375,
          -0.01,
          0.01375,
          0.025,
          0.03,
          0.015,
          -0.00125,
          -0.01125
        ],
        [
          -0.02625,
          -0.01125,
          -0.00125,
          0.0175,
          0.0175,
          0.00125,
          -0.0175,
          -0.04
        ],
        [
          -0.03875,
          -0.02,
          -0.005,
          0.00625,
          0.005,
          0.00625,
          -0.02,
          -0.0425
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (Clicky)": {
      "points": [
        [
          -0.0525,
          -0.0225,
          -0.00875,
          -0.00125,
          -0.01125,
          -0.00625,
          -0.0125,
          -0.0375
        ],
        [
          -0.03875,
          -0.01,
          -0.00125,
          0,
          0.005,
          0.01,
          -0.005,
          -0.04375
        ],
        [
          -0.0175,
          0.00125,
          0.0075,
          0.0225,
          0.0075,
          0.01375,
          -0.00125,
          -0.04125
        ],
        [
          -0.02625,
          -0.01125,
          0,
          0.02625,
          0.02625,
          0.005,
          0.0025,
          -0.0225
        ],
        [
          -0.04,
          -0.00625,
          0.02375,
          0.02125,
          0.0275,
          0.02375,
          0.0075,
          -0.0125
        ],
        [
          -0.03125,
          -0.00875,
          -0.005,
          0.0275,
          0.0225,
          0.0325,
          0.01625,
          -0.01375
        ],
        [
          -0.01625,
          -0.01875,
          -0.0025,
          0.02,
          0.0225,
          0.0175,
          0.005,
          -0.01875
        ],
        [
          -0.035,
          -0.03875,
          -0.00875,
          -0.00375,
          0.02,
          0.02125,
          -0.02625,
          -0.02625
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG)": {
      "points": [
        [
          -0.0525,
          -0.04125,
          -0.0275,
          -0.0175,
          -0.02375,
          -0.02,
          -0.0375,
          -0.0525
        ],
        [
          -0.03875,
          -0.01875,
          -0.01125,
          0,
          0.00125,
          0,
          -0.0075,
          -0.03375
        ],
        [
          -0.03625,
          -0.01625,
          -0.01,
          0.0075,
          0.00875,
          0.00625,
          -0.0025,
          -0.02
        ],
        [
          -0.0625,
          -0.04625,
          -0.0225,
          0,
          0.00125,
          0.0025,
          -0.00875,
          -0.01125
        ],
        [
          -0.06375,
          -0.03125,
          -0.00625,
          0.00875,
          0.01,
          0.00875,
          0.00125,
          0.00125
        ],
        [
          -0.06875,
          -0.0325,
          -0.00625,
          0.00625,
          0.00375,
          0.00375,
          -0.00875,
          -0.01
        ],
        [
          -0.05875,
          -0.0325,
          -0.005,
          0.0075,
          0.00625,
          0.00125,
          -0.015,
          -0.02375
        ],
        [
          -0.04375,
          -0.02875,
          -0.00875,
          -0.00125,
          0.00375,
          0.00375,
          -0.02125,
          -0.03375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (C+NG)": {
      "points": [
        [
          -0.04625,
          -0.02875,
          -0.00875,
          -0.0075,
          -0.02,
          -0.01625,
          -0.02375,
          -0.05875
        ],
        [
          -0.0525,
          -0.0225,
          -0.00875,
          0,
          -0.0075,
          -0.0025,
          -0.005,
          -0.05125
        ],
        [
          -0.06625,
          -0.02125,
          -0.02,
          -0.00125,
          0.00625,
          -0.005,
          -0.00625,
          -0.04
        ],
        [
          -0.08875,
          -0.06,
          -0.035,
          -0.0125,
          -0.00875,
          -0.00375,
          -0.00875,
          -0.03125
        ],
        [
          -0.0775,
          -0.03375,
          -0.0025,
          0.00375,
          -0.00875,
          0.01625,
          -0.005,
          0.0375
        ],
        [
          -0.07625,
          -0.02375,
          0,
          0.01125,
          -0.00875,
          0,
          -0.01,
          -0.00375
        ],
        [
          -0.06,
          -0.02375,
          -0.005,
          0.005,
          -0.00625,
          -0.01375,
          -0.0225,
          -0.02
        ],
        [
          -0.06125,
          -0.0525,
          -0.00875,
          -0.01125,
          -0.02125,
          -0.02375,
          -0.04375,
          -0.04375
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (C+NG)": {
      "points": [
        [
          -0.04875,
          -0.0325,
          -0.01875,
          -0.0175,
          -0.0275,
          -0.02375,
          -0.03125,
          -0.0575
        ],
        [
          -0.0325,
          -0.01875,
          -0.00875,
          0,
          0.00625,
          0.00375,
          -0.00625,
          -0.025
        ],
        [
          -0.0325,
          -0.01,
          -0.00125,
          0.01375,
          0.02125,
          0.0075,
          -0.0025,
          -0.01625
        ],
        [
          -0.05,
          -0.045,
          -0.015,
          0.01375,
          0.01125,
          0.015,
          -0.00875,
          -0.01875
        ],
        [
          -0.05125,
          -0.01375,
          0.00875,
          0.0175,
          0.00875,
          0.015,
          0.0075,
          0.00625
        ],
        [
          -0.05625,
          -0.02125,
          -0.005,
          0.015,
          0.025,
          0.01875,
          0.0075,
          -0.0025
        ],
        [
          -0.05,
          -0.02125,
          -0.01125,
          0.01125,
          0.015,
          0.00625,
          -0.015,
          -0.02875
        ],
        [
          -0.045,
          -0.02125,
          -0.00875,
          0.0025,
          0.0025,
          0.01,
          -0.0175,
          -0.035
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG+B)": {
      "points": [
        [
          -0.07875,
          -0.05875,
          -0.0475,
          -0.02375,
          -0.03,
          -0.03,
          -0.04375,
          -0.0575
        ],
        [
          -0.035,
          -0.02875,
          -0.01875,
          0,
          0.005,
          0.0025,
          -0.00875,
          -0.03625
        ],
        [
          -0.04125,
          -0.02875,
          -0.02125,
          -0.00125,
          0.00375,
          0.00875,
          -0.01625,
          -0.0325
        ],
        [
          -0.06,
          -0.05375,
          -0.03125,
          -0.005,
          -0.00625,
          0,
          -0.00875,
          -0.0175
        ],
        [
          -0.05625,
          -0.03875,
          -0.02,
          0.01125,
          0.00125,
          0.005,
          0,
          -0.00875
        ],
        [
          -0.065,
          -0.04,
          -0.01375,
          0.0025,
          0.00125,
          0.005,
          -0.01,
          -0.01375
        ],
        [
          -0.06375,
          -0.03625,
          -0.0225,
          -0.00125,
          0,
          -0.0075,
          -0.02125,
          -0.0325
        ],
        [
          -0.05875,
          -0.045,
          -0.03,
          -0.00875,
          -0.005,
          -0.00875,
          -0.03375,
          -0.0425
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "E-Plate (C+NG+B)": {
      "points": [
        [
          -0.1125,
          -0.075,
          -0.0475,
          -0.0375,
          -0.06125,
          -0.055,
          -0.0475,
          -0.09375
        ],
        [
          -0.07125,
          -0.03625,
          -0.0125,
          0,
          -0.01625,
          -0.01875,
          -0.01125,
          -0.04875
        ],
        [
          -0.06625,
          -0.01875,
          -0.00375,
          0.0075,
          0.005,
          -0.005,
          0.0025,
          -0.04
        ],
        [
          -0.08125,
          -0.055,
          -0.01375,
          0.01375,
          0,
          -0.00375,
          0,
          -0.03125
        ],
        [
          -0.0875,
          -0.04,
          -0.00125,
          0.00875,
          0.005,
          0.00375,
          0.01125,
          -0.01
        ],
        [
          -0.09,
          -0.04875,
          -0.01125,
          0.0075,
          0.005,
          -0.00625,
          0,
          -0.0275
        ],
        [
          -0.0875,
          -0.04625,
          -0.0275,
          -0.01,
          -0.01625,
          -0.02375,
          -0.0225,
          -0.0575
        ],
        [
          -0.105,
          -0.0675,
          -0.04625,
          -0.03,
          -0.04375,
          -0.045,
          -0.0475,
          -0.08875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ-Plate (C+NG+B)": {
      "points": [
        [
          -0.09625,
          -0.055,
          -0.035,
          -0.02625,
          -0.03625,
          -0.0375,
          -0.04875,
          -0.06625
        ],
        [
          -0.055,
          -0.015,
          -0.01125,
          0,
          -0.00125,
          -0.00625,
          -0.00875,
          -0.04125
        ],
        [
          -0.04625,
          -0.01125,
          -0.00625,
          0.01,
          0.0075,
          0.00375,
          -0.00375,
          -0.03
        ],
        [
          -0.075,
          -0.03375,
          -0.0125,
          0.00875,
          0.0125,
          -0.0025,
          0.00125,
          -0.02
        ],
        [
          -0.08,
          -0.0375,
          -0.00625,
          0.01125,
          0.01625,
          0.01125,
          0.0075,
          -0.00375
        ],
        [
          -0.085,
          -0.03625,
          -0.0175,
          -0.00125,
          -0.0025,
          -0.00125,
          -0.00375,
          -0.01625
        ],
        [
          -0.08125,
          -0.04125,
          -0.03,
          -0.00375,
          -0.00625,
          -0.02,
          -0.015,
          -0.035
        ],
        [
          -0.07875,
          -0.06375,
          -0.05,
          -0.02625,
          -0.02125,
          -0.02375,
          -0.0475,
          -0.05875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "BQ_V2": {
      "points": [
        [
          -0.04,
          -0.03375,
          -0.03125,
          -0.015,
          -0.025,
          -0.02375,
          -0.02875,
          -0.04375
        ],
        [
          -0.02375,
          -0.01875,
          -0.01625,
          0,
          0.005,
          0.00875,
          0.005,
          -0.035
        ],
        [
          -0.0375,
          -0.015,
          -0.01,
          0.0125,
          0.02,
          0.015,
          0.01125,
          -0.01625
        ],
        [
          -0.04375,
          -0.02875,
          -0.0175,
          0.0175,
          0.035,
          0.02125,
          0.03125,
          0.005
        ],
        [
          -0.04125,
          -0.00125,
          0.005,
          0.0375,
          0.035,
          0.0425,
          0.04625,
          0.0425
        ],
        [
          -0.03375,
          0.00375,
          0.00875,
          0.035,
          0.0375,
          0.035,
          0.035,
          0.02375
        ],
        [
          -0.015,
          0.005,
          0.01625,
          0.03375,
          0.035,
          0.025,
          0.02875,
          0.01125
        ],
        [
          -0.015,
          -0.0025,
          0.01625,
          0.035,
          0.03875,
          0.03875,
          0.0225,
          0.00875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "VW-Plate (C+NG+B++)": {
      "points": [
        [
          -0.0725,
          -0.06375,
          -0.0525,
          -0.03625,
          -0.04125,
          -0.04125,
          -0.05625,
          -0.06375
        ],
        [
          -0.0325,
          -0.02125,
          -0.0225,
          0,
          0,
          0.00125,
          -0.01625,
          -0.04
        ],
        [
          -0.04,
          -0.025,
          -0.01875,
          0.00375,
          0.00375,
          0.015,
          -0.005,
          -0.02125
        ],
        [
          -0.05875,
          -0.045,
          -0.0225,
          0.00375,
          0.0075,
          0.0075,
          0.00375,
          -0.0075
        ],
        [
          -0.0575,
          -0.03875,
          -0.015,
          0.01125,
          0.0075,
          0.0125,
          0.005,
          -0.00375
        ],
        [
          -0.06375,
          -0.03625,
          -0.01375,
          0.005,
          0.0025,
          0.0075,
          -0.0075,
          -0.01125
        ],
        [
          -0.06875,
          -0.0425,
          -0.03125,
          -0.01125,
          -0.0075,
          -0.02125,
          -0.0325,
          -0.045
        ],
        [
          -0.075,
          -0.0575,
          -0.04875,
          -0.03,
          -0.03125,
          -0.03625,
          -0.05625,
          -0.06875
        ]
      ],
      "mesh_params": {
        "min_x": 40,
        "max_x": 259.94,
        "min_y": 40,
        "max_y": 259.94,
        "x_count": 8,
        "y_count": 8,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "Bed_45_left_rotated_try2_10min_heat": {
      "points": [
        [
          0.04125,
          0.08875,
          0.1175,
          0.1125,
          0.0825,
          -0.02625
        ],
        [
          0.01375,
          0.06625,
          0.0975,
          0.0925,
          0.0675,
          -0.0225
        ],
        [
          -0.0325,
          0.0275,
          0.065,
          0.0625,
          0.02875,
          -0.0425
        ],
        [
          -0.04,
          0.0175,
          0.0525,
          0.07125,
          0.05125,
          -0.01375
        ],
        [
          0.0025,
          0.055,
          0.095,
          0.1,
          0.0725,
          0.01
        ],
        [
          0.055,
          0.1025,
          0.13125,
          0.12125,
          0.085,
          0.02875
        ]
      ],
      "mesh_params": {
        "min_x": 25,
        "max_x": 275,
        "min_y": 25,
        "max_y": 275,
        "x_count": 6,
        "y_count": 6,
        "mesh_x_pps": 2,
        "mesh_y_pps": 2,
        "algo": "bicubic",
        "tension": 0.2
      }
    },
    "Bed_45_left_rotated_try1_5min_heated": {
      "points": [
        [
          0.4,
          0.1,
          0.2,
          0.01,
          -0.1
        ],
        [
          0.02,
          0.44,
          0.22,
          0.33,
          -0.1
        ],
        [
          -0.2,
          0.2,
          0.3,
          0.4,
          -0.4
        ],
        [
          -0.9,
          0.8,
          0.7,
          0.6,
          0.5
        ],
        [
          0.5,
          0.5,
          0.4,
          0.3,
          0.9
        ]
      ],
      "mesh_params": {
        "min_x": 10,
        "max_x": 299,
        "min_y": 5,
        "max_y": 299,
        "x_count": 3,
        "y_count": 3,
        "mesh_x_pps": 3,
        "mesh_y_pps": 3,
        "algo": "bicubic",
        "tension": 0.3
      }
    }
  }
}
    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    expect(mesh.profileName, 'Not A Plate');
    expect(mesh.probedMatrix.length, 3);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 3 * 3);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 12 * 12);
    expect(mesh.profiles.length, 18);
    expect(mesh.zValueRangeProbed, (-0.33, 0.44));
    expect(mesh.meshMin, (20, 20));
    expect(mesh.meshMax, (280, 280));

    // verify probed matrix
    expect(mesh.probedMatrix[0], [-0.3, -0.2, -0.1]);
    expect(mesh.probedMatrix[1], [0.44, -0.33, -0.22]);
    expect(mesh.probedMatrix[2], [-0.1, -0.2, 0]);

    var bedMeshProfile = mesh.profiles.firstWhere((element) => element.name == 'Bed_45_left_rotated_try1_5min_heated');
    expect(bedMeshProfile, isNotNull);
    expect(bedMeshProfile.meshParams.minX, 10);
    expect(bedMeshProfile.meshParams.maxX, 299);
    expect(bedMeshProfile.meshParams.minY, 5);
    expect(bedMeshProfile.meshParams.maxY, 299);
    expect(bedMeshProfile.meshParams.xCount, 3);
    expect(bedMeshProfile.meshParams.yCount, 3);
    expect(bedMeshProfile.meshParams.meshXPPS, 3);
    expect(bedMeshProfile.meshParams.meshYPPS, 3);
    expect(bedMeshProfile.meshParams.algo, 'bicubic');
    expect(bedMeshProfile.meshParams.tension, 0.3);

    // now test the points
    expect(bedMeshProfile.points.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);

    expect(bedMeshProfile.points[0], [0.4, 0.1, 0.2, 0.01, -0.1]);
    expect(bedMeshProfile.points[1], [0.02, 0.44, 0.22, 0.33, -0.1]);
    expect(bedMeshProfile.points[2], [-0.2, 0.2, 0.3, 0.4, -0.4]);
    expect(bedMeshProfile.points[3], [-0.9, 0.8, 0.7, 0.6, 0.5]);
    expect(bedMeshProfile.points[4], [0.5, 0.5, 0.4, 0.3, 0.9]);
  });

  test('BedMesh.partialUpdate for mesh min max', () {
    const updateStr = '''
{
  "mesh_min": [
    20,
    20
  ],
  "mesh_max": [
    280,
    280
  ]
}
    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    // verify unchanged
    expect(mesh.profileName, 'BQ-Plate');
    expect(mesh.probedMatrix.length, 5);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    expect(mesh.profiles.length, 19);
    expect(mesh.zValueRangeProbed, (-0.05, 0.02));

    expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify meshMatrix
    expect(mesh.meshMatrix[0], [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ]);
    expect(mesh.meshMatrix[1], [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ]);
    expect(mesh.meshMatrix[2], [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ]);
    expect(mesh.meshMatrix[3], [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ]);
    expect(mesh.meshMatrix[4], [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ]);
    expect(mesh.meshMatrix[5], [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ]);
    expect(mesh.meshMatrix[6], [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ]);
    expect(mesh.meshMatrix[7], [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ]);
    expect(mesh.meshMatrix[8], [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ]);
    expect(mesh.meshMatrix[9], [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ]);
    expect(mesh.meshMatrix[10], [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ]);
    expect(mesh.meshMatrix[11], [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ]);
    expect(mesh.meshMatrix[12], [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]);

    // verify changed fields
    expect(mesh.meshMin, (20, 20));
    expect(mesh.meshMax, (280, 280));
  });

  test('BedMesh.partialUpdate for profile_name', () {
    const updateStr = '''
{
  "profile_name": "Not A Plate"
}
    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    // Verify unchanged
    expect(mesh.probedMatrix.length, 5);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    expect(mesh.profiles.length, 19);
    expect(mesh.zValueRangeProbed, (-0.05, 0.02));
    expect(mesh.meshMin, (40, 40));
    expect(mesh.meshMax, (260, 260));

    expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify meshMatrix
    expect(mesh.meshMatrix[0], [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ]);
    expect(mesh.meshMatrix[1], [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ]);
    expect(mesh.meshMatrix[2], [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ]);
    expect(mesh.meshMatrix[3], [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ]);
    expect(mesh.meshMatrix[4], [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ]);
    expect(mesh.meshMatrix[5], [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ]);
    expect(mesh.meshMatrix[6], [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ]);
    expect(mesh.meshMatrix[7], [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ]);
    expect(mesh.meshMatrix[8], [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ]);
    expect(mesh.meshMatrix[9], [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ]);
    expect(mesh.meshMatrix[10], [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ]);
    expect(mesh.meshMatrix[11], [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ]);
    expect(mesh.meshMatrix[12], [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]);

    // Verify changed fields
    expect(mesh.profileName, 'Not A Plate');
  });

  test('BedMesh.partialUpdate for probed_matrix', () {
    const updateStr = '''
{
  "probed_matrix": [
    [
      -0.3,
      -0.2,
      -0.1
    ],
    [
      0.44,
      -0.33,
      -0.22
    ],
    [
      -0.1,
      -0.2,
      0
    ]
  ]
}
    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    // Verify unchanged
    expect(mesh.profileName, 'BQ-Plate');
    // expect(mesh.probedMatrix.length, 5);
    // expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    expect(mesh.profiles.length, 19);
    // expect(mesh.zValueRange, 0.07);
    expect(mesh.meshMin, (40, 40));
    expect(mesh.meshMax, (260, 260));

    // expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    // expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    // expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    // expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    // expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify meshMatrix
    expect(mesh.meshMatrix[0], [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ]);
    expect(mesh.meshMatrix[1], [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ]);
    expect(mesh.meshMatrix[2], [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ]);
    expect(mesh.meshMatrix[3], [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ]);
    expect(mesh.meshMatrix[4], [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ]);
    expect(mesh.meshMatrix[5], [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ]);
    expect(mesh.meshMatrix[6], [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ]);
    expect(mesh.meshMatrix[7], [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ]);
    expect(mesh.meshMatrix[8], [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ]);
    expect(mesh.meshMatrix[9], [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ]);
    expect(mesh.meshMatrix[10], [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ]);
    expect(mesh.meshMatrix[11], [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ]);
    expect(mesh.meshMatrix[12], [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]);

    // Verify changed fields
    expect(mesh.probedMatrix.length, 3);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 3 * 3);
    expect(mesh.probedMatrix[0], [-0.3, -0.2, -0.1]);
    expect(mesh.probedMatrix[1], [0.44, -0.33, -0.22]);
    expect(mesh.probedMatrix[2], [-0.1, -0.2, 0]);
    expect(mesh.zValueRangeProbed, (-0.33, 0.44));
  });

  test('BedMesh.partialUpdate for mesh_matrix', () {
    const updateStr = '''
{
"mesh_matrix": [
    [
      -0.035,
      -0.039296,
      -0.046259,
      -0.05,
      -0.04713,
      -0.04137,
      -0.0375,
      -0.035407,
      -0.032537,
      -0.03,
      -0.023611,
      -0.013556
    ],
    [
      -0.024611,
      -0.029446,
      -0.0373,
      -0.041593,
      -0.038844,
      -0.033171,
      -0.029389,
      -0.027544,
      -0.025125,
      -0.023111,
      -0.01854,
      -0.011403
    ],
    [
      -0.007556,
      -0.013295,
      -0.022642,
      -0.027852,
      -0.025251,
      -0.019632,
      -0.015944,
      -0.014531,
      -0.012906,
      -0.011778,
      -0.010147,
      -0.007723
    ],
    [
      0.0025,
      -0.003852,
      -0.014204,
      -0.02,
      -0.017278,
      -0.011333,
      -0.0075,
      -0.006444,
      -0.0055,
      -0.005,
      -0.004926,
      -0.004963
    ],
    [
      0.001519,
      -0.005439,
      -0.016732,
      -0.02287,
      -0.018537,
      -0.009844,
      -0.004444,
      -0.004084,
      -0.004611,
      -0.004833,
      -0.003388,
      -0.000981
    ],
    [
      -0.002463,
      -0.010231,
      -0.022769,
      -0.029296,
      -0.022371,
      -0.009292,
      -0.001389,
      -0.002118,
      -0.004947,
      -0.006222,
      -0.002082,
      0.005052
    ],
    [
      -0.005,
      -0.013019,
      -0.025926,
      -0.0325,
      -0.024296,
      -0.009093,
      0,
      -0.001426,
      -0.00563,
      -0.0075,
      -0.001556,
      0.008722
    ],
    [
      -0.004315,
      -0.010685,
      -0.020949,
      -0.026222,
      -0.019988,
      -0.008392,
      -0.001537,
      -0.00338,
      -0.007732,
      -0.009481,
      -0.002378,
      0.017296
    ],
    [
      -0.002852,
      -0.006446,
      -0.012268,
      -0.015389,
      -0.012724,
      -0.007609,
      -0.004741,
      -0.007081,
      -0.011306,
      -0.012685,
      -0.004074,
      0.019593
    ],
    [
      -0.0025,
      -0.004593,
      -0.008019,
      -0.01,
      -0.009426,
      -0.008074,
      -0.0075,
      -0.01,
      -0.013944,
      -0.015,
      -0.00563,
      0.02
    ],
    [
      -0.006537,
      -0.009819,
      -0.015182,
      -0.018241,
      -0.017136,
      -0.014617,
      -0.013204,
      -0.014832,
      -0.01753,
      -0.017963,
      -0.009349,
      0.013981
    ],
    [
      -0.013352,
      -0.018973,
      -0.028133,
      -0.033259,
      -0.030795,
      -0.025468,
      -0.02213,
      -0.022253,
      -0.022913,
      -0.02237,
      -0.015221,
      0.003741
    ]
  ]
}
    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    // Verify unchanged
    expect(mesh.profileName, 'BQ-Plate');
    expect(mesh.probedMatrix.length, 5);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    // expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    expect(mesh.profiles.length, 19);
    expect(mesh.zValueRangeProbed, (-0.05, 0.02));
    expect(mesh.meshMin, (40, 40));
    expect(mesh.meshMax, (260, 260));

    expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify changed fields
    expect(mesh.meshMatrix.length, 12);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 12 * 12);
    expect(mesh.meshMatrix[0], [
      -0.035,
      -0.039296,
      -0.046259,
      -0.05,
      -0.04713,
      -0.04137,
      -0.0375,
      -0.035407,
      -0.032537,
      -0.03,
      -0.023611,
      -0.013556
    ]);
    expect(mesh.meshMatrix[1], [
      -0.024611,
      -0.029446,
      -0.0373,
      -0.041593,
      -0.038844,
      -0.033171,
      -0.029389,
      -0.027544,
      -0.025125,
      -0.023111,
      -0.01854,
      -0.011403
    ]);
    expect(mesh.meshMatrix[2], [
      -0.007556,
      -0.013295,
      -0.022642,
      -0.027852,
      -0.025251,
      -0.019632,
      -0.015944,
      -0.014531,
      -0.012906,
      -0.011778,
      -0.010147,
      -0.007723
    ]);
    expect(mesh.meshMatrix[3], [
      0.0025,
      -0.003852,
      -0.014204,
      -0.02,
      -0.017278,
      -0.011333,
      -0.0075,
      -0.006444,
      -0.0055,
      -0.005,
      -0.004926,
      -0.004963
    ]);
    expect(mesh.meshMatrix[4], [
      0.001519,
      -0.005439,
      -0.016732,
      -0.02287,
      -0.018537,
      -0.009844,
      -0.004444,
      -0.004084,
      -0.004611,
      -0.004833,
      -0.003388,
      -0.000981
    ]);
    expect(mesh.meshMatrix[5], [
      -0.002463,
      -0.010231,
      -0.022769,
      -0.029296,
      -0.022371,
      -0.009292,
      -0.001389,
      -0.002118,
      -0.004947,
      -0.006222,
      -0.002082,
      0.005052
    ]);
    expect(mesh.meshMatrix[6], [
      -0.005,
      -0.013019,
      -0.025926,
      -0.0325,
      -0.024296,
      -0.009093,
      0,
      -0.001426,
      -0.00563,
      -0.0075,
      -0.001556,
      0.008722
    ]);
    expect(mesh.meshMatrix[7], [
      -0.004315,
      -0.010685,
      -0.020949,
      -0.026222,
      -0.019988,
      -0.008392,
      -0.001537,
      -0.00338,
      -0.007732,
      -0.009481,
      -0.002378,
      0.017296
    ]);
    expect(mesh.meshMatrix[8], [
      -0.002852,
      -0.006446,
      -0.012268,
      -0.015389,
      -0.012724,
      -0.007609,
      -0.004741,
      -0.007081,
      -0.011306,
      -0.012685,
      -0.004074,
      0.019593
    ]);
    expect(mesh.meshMatrix[9], [
      -0.0025,
      -0.004593,
      -0.008019,
      -0.01,
      -0.009426,
      -0.008074,
      -0.0075,
      -0.01,
      -0.013944,
      -0.015,
      -0.00563,
      0.02
    ]);
    expect(mesh.meshMatrix[10], [
      -0.006537,
      -0.009819,
      -0.015182,
      -0.018241,
      -0.017136,
      -0.014617,
      -0.013204,
      -0.014832,
      -0.01753,
      -0.017963,
      -0.009349,
      0.013981
    ]);
    expect(mesh.meshMatrix[11], [
      -0.013352,
      -0.018973,
      -0.028133,
      -0.033259,
      -0.030795,
      -0.025468,
      -0.02213,
      -0.022253,
      -0.022913,
      -0.02237,
      -0.015221,
      0.003741
    ]);
  });

  test('BedMesh.partialUpdate for profiles', () {
    const updateStr = '''
{
  "profiles": {
    "TeeeeeSt": {
      "points": [
        [
          -0.532,
          -0.168,
          -0.317,
          -0.098,
          -0.678
        ],
        [
          -0.423,
          -0.789,
          -0.754,
          -0.956,
          -0.987
        ],
        [
          0.555,
          -0.193,
          0.304,
          -0.87,
          0.746
        ],
        [
          0.231,
          -0.623,
          -0.012,
          0.127,
          -0.695
        ],
        [
          -0.432,
          -0.784,
          -0.339,
          0.815,
          -0.125
        ]
      ],
      "mesh_params": {
        "min_x": -90,
        "max_x": 340,
        "min_y": -50,
        "max_y": 140,
        "x_count": 2,
        "y_count": 4,
        "mesh_x_pps": 1,
        "mesh_y_pps": 4,
        "algo": "linear",
        "tension": 0.9
      }
    }
  }
}

    ''';
    var strToJson = jsonDecode(originalStr);

    var mesh = BedMesh.fromJson(strToJson);
    expect(mesh, isNotNull);
    var partialJson = jsonDecode(updateStr);
    mesh = BedMesh.partialUpdate(mesh, partialJson);

    // Verify unchanged
    expect(mesh.profileName, 'BQ-Plate');
    expect(mesh.probedMatrix.length, 5);
    expect(mesh.probedMatrix.fold(0, (previousValue, element) => previousValue + element.length), 5 * 5);
    expect(mesh.meshMatrix.fold(0, (previousValue, element) => previousValue + element.length), 13 * 13);
    // expect(mesh.profiles.length, 19);
    expect(mesh.zValueRangeProbed, (-0.05, 0.02));
    expect(mesh.meshMin, (40, 40));
    expect(mesh.meshMax, (260, 260));

    expect(mesh.probedMatrix[0], [-0.035, -0.05, -0.0375, -0.03, -0.0075]);
    expect(mesh.probedMatrix[1], [0.0025, -0.02, -0.0075, -0.005, -0.005]);
    expect(mesh.probedMatrix[2], [-0.005, -0.0325, 0, -0.0075, 0.015]);
    expect(mesh.probedMatrix[3], [-0.0025, -0.01, -0.0075, -0.015, 0.02]);
    expect(mesh.probedMatrix[4], [-0.0175, -0.0425, -0.0275, -0.025, -0.0025]);

    // Verify meshMatrix
    expect(mesh.meshMatrix[0], [
      -0.756481,
      1.153175,
      1.425896,
      0.129374,
      0.649827,
      0.925864,
      -1.840723,
      -0.675481,
      -0.325241,
      -1.825891,
      0.892747,
      0.444802,
      1.752001
    ]);
    expect(mesh.meshMatrix[1], [
      -1.121495,
      -0.260821,
      -0.150471,
      1.235671,
      -1.398652,
      -0.637177,
      0.352697,
      -0.853429,
      0.140143,
      1.422048,
      0.484511,
      -0.829401,
      -0.578978
    ]);
    expect(mesh.meshMatrix[2], [
      -0.454372,
      0.158906,
      -0.781423,
      1.808394,
      0.964613,
      0.791204,
      0.982843,
      0.105927,
      1.877408,
      0.360553,
      -1.665597,
      1.247384,
      0.935477
    ]);
    expect(mesh.meshMatrix[3], [
      0.992067,
      -0.194677,
      1.299925,
      -1.108764,
      -0.081308,
      0.946162,
      -0.180204,
      -0.987523,
      -0.600713,
      -0.725325,
      -1.155591,
      -0.878267,
      0.759365
    ]);
    expect(mesh.meshMatrix[4], [
      -0.748307,
      0.358562,
      -1.193325,
      0.086895,
      -1.679253,
      0.354707,
      -1.358228,
      -0.127455,
      1.491891,
      -0.552938,
      0.442162,
      -1.380256,
      -1.178665
    ]);
    expect(mesh.meshMatrix[5], [
      -0.758157,
      -0.344126,
      0.092946,
      -0.570617,
      0.352442,
      1.226034,
      0.194587,
      -1.889006,
      1.274716,
      -1.456075,
      -0.740734,
      -1.098769,
      -0.178114
    ]);
    expect(mesh.meshMatrix[6], [
      1.951594,
      -0.481906,
      -1.208783,
      -0.858702,
      -0.544455,
      0.667601,
      -0.773376,
      0.048019,
      -1.245294,
      0.019097,
      -0.682917,
      -1.320794,
      1.732751
    ]);
    expect(mesh.meshMatrix[7], [
      -1.447193,
      0.844197,
      -0.382214,
      1.703836,
      1.127651,
      -0.812818,
      -0.416611,
      0.036901,
      -1.746578,
      -0.580283,
      0.615488,
      -0.412487,
      0.099862
    ]);
    expect(mesh.meshMatrix[8], [
      0.396287,
      -1.436243,
      -0.768836,
      0.365187,
      -1.355937,
      -0.174468,
      1.236936,
      0.723375,
      0.401737,
      -0.649325,
      -1.648037,
      0.214601,
      1.687685
    ]);
    expect(mesh.meshMatrix[9], [
      0.475867,
      -1.313856,
      0.099098,
      -0.684832,
      -1.727676,
      0.917289,
      1.422686,
      1.328415,
      1.981585,
      -0.351799,
      -1.462225,
      -0.231977,
      0.819325
    ]);
    expect(mesh.meshMatrix[10], [
      0.380159,
      0.980643,
      1.246679,
      -0.803234,
      1.155031,
      0.223898,
      -0.607776,
      0.114549,
      -1.570872,
      -0.140853,
      0.994465,
      0.611116,
      -0.804183
    ]);
    expect(mesh.meshMatrix[11], [
      0.328855,
      0.574672,
      0.091944,
      0.228731,
      1.258634,
      0.192243,
      -1.793611,
      1.653021,
      -0.329917,
      0.235548,
      -0.158893,
      1.255674,
      1.424175
    ]);
    expect(mesh.meshMatrix[12], [
      -1.871893,
      -0.463211,
      0.019091,
      -1.325019,
      -1.939303,
      0.801292,
      -0.802163,
      -1.263348,
      1.847561,
      0.758827,
      -1.764522,
      -0.131018,
      -0.856919
    ]);

    // Verify changed fields
    expect(mesh.profiles.length, 1);
    expect(mesh.profiles[0], isNotNull);
    expect(mesh.profiles[0].name, 'TeeeeeSt');
    expect(mesh.profiles[0].points.length, 5);
    expect(mesh.profiles[0].points[0], [-0.532, -0.168, -0.317, -0.098, -0.678]);
    expect(mesh.profiles[0].points[1], [-0.423, -0.789, -0.754, -0.956, -0.987]);
    expect(mesh.profiles[0].points[2], [0.555, -0.193, 0.304, -0.87, 0.746]);
    expect(mesh.profiles[0].points[3], [0.231, -0.623, -0.012, 0.127, -0.695]);
    expect(mesh.profiles[0].points[4], [-0.432, -0.784, -0.339, 0.815, -0.125]);
    expect(mesh.profiles[0].meshParams.minX, -90);
    expect(mesh.profiles[0].meshParams.maxX, 340);
    expect(mesh.profiles[0].meshParams.minY, -50);
    expect(mesh.profiles[0].meshParams.maxY, 140);
    expect(mesh.profiles[0].meshParams.xCount, 2);
    expect(mesh.profiles[0].meshParams.yCount, 4);
    expect(mesh.profiles[0].meshParams.meshXPPS, 1);
    expect(mesh.profiles[0].meshParams.meshYPPS, 4);
    expect(mesh.profiles[0].meshParams.algo, 'linear');
    expect(mesh.profiles[0].meshParams.tension, 0.9);
  });
}
